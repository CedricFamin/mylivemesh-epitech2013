//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace client_mesh.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResult", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(client_mesh.ServiceReference1.WebResultOfArrayOfstringuHEDJ7Dj))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(client_mesh.ServiceReference1.WebResultOfArrayOfFileDefinitiony8fP_SiTt))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(client_mesh.ServiceReference1.WebResultOfFileDefinitiony8fP_SiTt))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(client_mesh.ServiceReference1.WebResultOfArrayOfSharingBZq_SeKvr))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(client_mesh.ServiceReference1.WebResultOfArrayOfSharingDefinitiony8fP_SiTt))]
    public partial class WebResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private client_mesh.ServiceReference1.WebResult.ErrorCodeList ErrorCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public client_mesh.ServiceReference1.WebResult.ErrorCodeList ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="WebResult.ErrorCodeList", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
        public enum ErrorCodeList : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SUCCESS = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            USER_NOT_FOUND = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            INFORMATION_REQUIRED = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            USER_ALREADY_EXIST = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CANNOT_CREATE_DIRECTORY = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DIRECTORY_NOT_FOUND = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CANNOT_DELETE_DIRECTORY = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CANNOT_RENAME_DIRECTORY = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FILE_NOT_FOUND = 8,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResultOfArrayOfstringuHEDJ7Dj", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
    public partial class WebResultOfArrayOfstringuHEDJ7Dj : client_mesh.ServiceReference1.WebResult {
        
        private System.Collections.ObjectModel.ObservableCollection<string> ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResultOfArrayOfFileDefinitiony8fP_SiTt", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
    public partial class WebResultOfArrayOfFileDefinitiony8fP_SiTt : client_mesh.ServiceReference1.WebResult {
        
        private System.Collections.ObjectModel.ObservableCollection<client_mesh.ServiceReference1.FileDefinition> ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<client_mesh.ServiceReference1.FileDefinition> Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResultOfFileDefinitiony8fP_SiTt", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
    public partial class WebResultOfFileDefinitiony8fP_SiTt : client_mesh.ServiceReference1.WebResult {
        
        private client_mesh.ServiceReference1.FileDefinition ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public client_mesh.ServiceReference1.FileDefinition Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResultOfArrayOfSharingBZq_SeKvr", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
    public partial class WebResultOfArrayOfSharingBZq_SeKvr : client_mesh.ServiceReference1.WebResult {
        
        private System.Collections.ObjectModel.ObservableCollection<client_mesh.ServiceReference1.Sharing> ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<client_mesh.ServiceReference1.Sharing> Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResultOfArrayOfSharingDefinitiony8fP_SiTt", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
    public partial class WebResultOfArrayOfSharingDefinitiony8fP_SiTt : client_mesh.ServiceReference1.WebResult {
        
        private System.Collections.ObjectModel.ObservableCollection<client_mesh.ServiceReference1.SharingDefinition> ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<client_mesh.ServiceReference1.SharingDefinition> Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileDefinition", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
    public partial class FileDefinition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FileUriField;
        
        private string FilenameField;
        
        private string MimeTypeField;
        
        private byte[] RawDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileUri {
            get {
                return this.FileUriField;
            }
            set {
                if ((object.ReferenceEquals(this.FileUriField, value) != true)) {
                    this.FileUriField = value;
                    this.RaisePropertyChanged("FileUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MimeType {
            get {
                return this.MimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MimeTypeField, value) != true)) {
                    this.MimeTypeField = value;
                    this.RaisePropertyChanged("MimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RawData {
            get {
                return this.RawDataField;
            }
            set {
                if ((object.ReferenceEquals(this.RawDataField, value) != true)) {
                    this.RawDataField = value;
                    this.RaisePropertyChanged("RawData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sharing", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.LinqToSQL")]
    public partial class Sharing : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string folderField;
        
        private int idField;
        
        private int idOwnerField;
        
        private int idRecevierField;
        
        private string userField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string folder {
            get {
                return this.folderField;
            }
            set {
                if ((object.ReferenceEquals(this.folderField, value) != true)) {
                    this.folderField = value;
                    this.RaisePropertyChanged("folder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idOwner {
            get {
                return this.idOwnerField;
            }
            set {
                if ((this.idOwnerField.Equals(value) != true)) {
                    this.idOwnerField = value;
                    this.RaisePropertyChanged("idOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idRecevier {
            get {
                return this.idRecevierField;
            }
            set {
                if ((this.idRecevierField.Equals(value) != true)) {
                    this.idRecevierField = value;
                    this.RaisePropertyChanged("idRecevier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharingDefinition", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
    public partial class SharingDefinition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int SharingIdField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SharingId {
            get {
                return this.SharingIdField;
            }
            set {
                if ((this.SharingIdField.Equals(value) != true)) {
                    this.SharingIdField = value;
                    this.RaisePropertyChanged("SharingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ServiceReference1.FolderManager")]
    public interface FolderManager {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:FolderManager/Create", ReplyAction="urn:FolderManager/CreateResponse")]
        System.IAsyncResult BeginCreate(int userId, string name, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference1.WebResult EndCreate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:FolderManager/Delete", ReplyAction="urn:FolderManager/DeleteResponse")]
        System.IAsyncResult BeginDelete(int userId, string name, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference1.WebResult EndDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:FolderManager/Rename", ReplyAction="urn:FolderManager/RenameResponse")]
        System.IAsyncResult BeginRename(int userId, string name, string newName, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference1.WebResult EndRename(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:FolderManager/DirList", ReplyAction="urn:FolderManager/DirListResponse")]
        System.IAsyncResult BeginDirList(int userId, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference1.WebResultOfArrayOfstringuHEDJ7Dj EndDirList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:FolderManager/FileList", ReplyAction="urn:FolderManager/FileListResponse")]
        System.IAsyncResult BeginFileList(int userId, string folder, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference1.WebResultOfArrayOfFileDefinitiony8fP_SiTt EndFileList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:FolderManager/GetFileFrom", ReplyAction="urn:FolderManager/GetFileFromResponse")]
        System.IAsyncResult BeginGetFileFrom(int userId, string folder, string file, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference1.WebResultOfFileDefinitiony8fP_SiTt EndGetFileFrom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:FolderManager/AddSharing", ReplyAction="urn:FolderManager/AddSharingResponse")]
        System.IAsyncResult BeginAddSharing(int ownerId, int friendId, string folder, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference1.WebResult EndAddSharing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:FolderManager/GetSharing", ReplyAction="urn:FolderManager/GetSharingResponse")]
        System.IAsyncResult BeginGetSharing(int userId, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference1.WebResultOfArrayOfSharingBZq_SeKvr EndGetSharing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:FolderManager/GetReceiver", ReplyAction="urn:FolderManager/GetReceiverResponse")]
        System.IAsyncResult BeginGetReceiver(int userId, string folder, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference1.WebResultOfArrayOfSharingDefinitiony8fP_SiTt EndGetReceiver(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:FolderManager/DeleteSharing", ReplyAction="urn:FolderManager/DeleteSharingResponse")]
        System.IAsyncResult BeginDeleteSharing(int sharingId, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference1.WebResult EndDeleteSharing(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FolderManagerChannel : client_mesh.ServiceReference1.FolderManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference1.WebResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference1.WebResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference1.WebResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference1.WebResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RenameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RenameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference1.WebResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference1.WebResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DirListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DirListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference1.WebResultOfArrayOfstringuHEDJ7Dj Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference1.WebResultOfArrayOfstringuHEDJ7Dj)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference1.WebResultOfArrayOfFileDefinitiony8fP_SiTt Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference1.WebResultOfArrayOfFileDefinitiony8fP_SiTt)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFileFromCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFileFromCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference1.WebResultOfFileDefinitiony8fP_SiTt Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference1.WebResultOfFileDefinitiony8fP_SiTt)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddSharingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddSharingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference1.WebResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference1.WebResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSharingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSharingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference1.WebResultOfArrayOfSharingBZq_SeKvr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference1.WebResultOfArrayOfSharingBZq_SeKvr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReceiverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReceiverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference1.WebResultOfArrayOfSharingDefinitiony8fP_SiTt Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference1.WebResultOfArrayOfSharingDefinitiony8fP_SiTt)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteSharingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteSharingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference1.WebResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference1.WebResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FolderManagerClient : System.ServiceModel.ClientBase<client_mesh.ServiceReference1.FolderManager>, client_mesh.ServiceReference1.FolderManager {
        
        private BeginOperationDelegate onBeginCreateDelegate;
        
        private EndOperationDelegate onEndCreateDelegate;
        
        private System.Threading.SendOrPostCallback onCreateCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDelegate;
        
        private EndOperationDelegate onEndDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginRenameDelegate;
        
        private EndOperationDelegate onEndRenameDelegate;
        
        private System.Threading.SendOrPostCallback onRenameCompletedDelegate;
        
        private BeginOperationDelegate onBeginDirListDelegate;
        
        private EndOperationDelegate onEndDirListDelegate;
        
        private System.Threading.SendOrPostCallback onDirListCompletedDelegate;
        
        private BeginOperationDelegate onBeginFileListDelegate;
        
        private EndOperationDelegate onEndFileListDelegate;
        
        private System.Threading.SendOrPostCallback onFileListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFileFromDelegate;
        
        private EndOperationDelegate onEndGetFileFromDelegate;
        
        private System.Threading.SendOrPostCallback onGetFileFromCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddSharingDelegate;
        
        private EndOperationDelegate onEndAddSharingDelegate;
        
        private System.Threading.SendOrPostCallback onAddSharingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSharingDelegate;
        
        private EndOperationDelegate onEndGetSharingDelegate;
        
        private System.Threading.SendOrPostCallback onGetSharingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReceiverDelegate;
        
        private EndOperationDelegate onEndGetReceiverDelegate;
        
        private System.Threading.SendOrPostCallback onGetReceiverCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSharingDelegate;
        
        private EndOperationDelegate onEndDeleteSharingDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSharingCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FolderManagerClient() {
        }
        
        public FolderManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FolderManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FolderManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FolderManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<CreateCompletedEventArgs> CreateCompleted;
        
        public event System.EventHandler<DeleteCompletedEventArgs> DeleteCompleted;
        
        public event System.EventHandler<RenameCompletedEventArgs> RenameCompleted;
        
        public event System.EventHandler<DirListCompletedEventArgs> DirListCompleted;
        
        public event System.EventHandler<FileListCompletedEventArgs> FileListCompleted;
        
        public event System.EventHandler<GetFileFromCompletedEventArgs> GetFileFromCompleted;
        
        public event System.EventHandler<AddSharingCompletedEventArgs> AddSharingCompleted;
        
        public event System.EventHandler<GetSharingCompletedEventArgs> GetSharingCompleted;
        
        public event System.EventHandler<GetReceiverCompletedEventArgs> GetReceiverCompleted;
        
        public event System.EventHandler<DeleteSharingCompletedEventArgs> DeleteSharingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference1.FolderManager.BeginCreate(int userId, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreate(userId, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference1.WebResult client_mesh.ServiceReference1.FolderManager.EndCreate(System.IAsyncResult result) {
            return base.Channel.EndCreate(result);
        }
        
        private System.IAsyncResult OnBeginCreate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            return ((client_mesh.ServiceReference1.FolderManager)(this)).BeginCreate(userId, name, callback, asyncState);
        }
        
        private object[] OnEndCreate(System.IAsyncResult result) {
            client_mesh.ServiceReference1.WebResult retVal = ((client_mesh.ServiceReference1.FolderManager)(this)).EndCreate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateCompleted(object state) {
            if ((this.CreateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateCompleted(this, new CreateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateAsync(int userId, string name) {
            this.CreateAsync(userId, name, null);
        }
        
        public void CreateAsync(int userId, string name, object userState) {
            if ((this.onBeginCreateDelegate == null)) {
                this.onBeginCreateDelegate = new BeginOperationDelegate(this.OnBeginCreate);
            }
            if ((this.onEndCreateDelegate == null)) {
                this.onEndCreateDelegate = new EndOperationDelegate(this.OnEndCreate);
            }
            if ((this.onCreateCompletedDelegate == null)) {
                this.onCreateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCompleted);
            }
            base.InvokeAsync(this.onBeginCreateDelegate, new object[] {
                        userId,
                        name}, this.onEndCreateDelegate, this.onCreateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference1.FolderManager.BeginDelete(int userId, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete(userId, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference1.WebResult client_mesh.ServiceReference1.FolderManager.EndDelete(System.IAsyncResult result) {
            return base.Channel.EndDelete(result);
        }
        
        private System.IAsyncResult OnBeginDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            return ((client_mesh.ServiceReference1.FolderManager)(this)).BeginDelete(userId, name, callback, asyncState);
        }
        
        private object[] OnEndDelete(System.IAsyncResult result) {
            client_mesh.ServiceReference1.WebResult retVal = ((client_mesh.ServiceReference1.FolderManager)(this)).EndDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteCompleted(object state) {
            if ((this.DeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAsync(int userId, string name) {
            this.DeleteAsync(userId, name, null);
        }
        
        public void DeleteAsync(int userId, string name, object userState) {
            if ((this.onBeginDeleteDelegate == null)) {
                this.onBeginDeleteDelegate = new BeginOperationDelegate(this.OnBeginDelete);
            }
            if ((this.onEndDeleteDelegate == null)) {
                this.onEndDeleteDelegate = new EndOperationDelegate(this.OnEndDelete);
            }
            if ((this.onDeleteCompletedDelegate == null)) {
                this.onDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDelegate, new object[] {
                        userId,
                        name}, this.onEndDeleteDelegate, this.onDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference1.FolderManager.BeginRename(int userId, string name, string newName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRename(userId, name, newName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference1.WebResult client_mesh.ServiceReference1.FolderManager.EndRename(System.IAsyncResult result) {
            return base.Channel.EndRename(result);
        }
        
        private System.IAsyncResult OnBeginRename(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            string newName = ((string)(inValues[2]));
            return ((client_mesh.ServiceReference1.FolderManager)(this)).BeginRename(userId, name, newName, callback, asyncState);
        }
        
        private object[] OnEndRename(System.IAsyncResult result) {
            client_mesh.ServiceReference1.WebResult retVal = ((client_mesh.ServiceReference1.FolderManager)(this)).EndRename(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRenameCompleted(object state) {
            if ((this.RenameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RenameCompleted(this, new RenameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RenameAsync(int userId, string name, string newName) {
            this.RenameAsync(userId, name, newName, null);
        }
        
        public void RenameAsync(int userId, string name, string newName, object userState) {
            if ((this.onBeginRenameDelegate == null)) {
                this.onBeginRenameDelegate = new BeginOperationDelegate(this.OnBeginRename);
            }
            if ((this.onEndRenameDelegate == null)) {
                this.onEndRenameDelegate = new EndOperationDelegate(this.OnEndRename);
            }
            if ((this.onRenameCompletedDelegate == null)) {
                this.onRenameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRenameCompleted);
            }
            base.InvokeAsync(this.onBeginRenameDelegate, new object[] {
                        userId,
                        name,
                        newName}, this.onEndRenameDelegate, this.onRenameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference1.FolderManager.BeginDirList(int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDirList(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference1.WebResultOfArrayOfstringuHEDJ7Dj client_mesh.ServiceReference1.FolderManager.EndDirList(System.IAsyncResult result) {
            return base.Channel.EndDirList(result);
        }
        
        private System.IAsyncResult OnBeginDirList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            return ((client_mesh.ServiceReference1.FolderManager)(this)).BeginDirList(userId, callback, asyncState);
        }
        
        private object[] OnEndDirList(System.IAsyncResult result) {
            client_mesh.ServiceReference1.WebResultOfArrayOfstringuHEDJ7Dj retVal = ((client_mesh.ServiceReference1.FolderManager)(this)).EndDirList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDirListCompleted(object state) {
            if ((this.DirListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DirListCompleted(this, new DirListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DirListAsync(int userId) {
            this.DirListAsync(userId, null);
        }
        
        public void DirListAsync(int userId, object userState) {
            if ((this.onBeginDirListDelegate == null)) {
                this.onBeginDirListDelegate = new BeginOperationDelegate(this.OnBeginDirList);
            }
            if ((this.onEndDirListDelegate == null)) {
                this.onEndDirListDelegate = new EndOperationDelegate(this.OnEndDirList);
            }
            if ((this.onDirListCompletedDelegate == null)) {
                this.onDirListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDirListCompleted);
            }
            base.InvokeAsync(this.onBeginDirListDelegate, new object[] {
                        userId}, this.onEndDirListDelegate, this.onDirListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference1.FolderManager.BeginFileList(int userId, string folder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFileList(userId, folder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference1.WebResultOfArrayOfFileDefinitiony8fP_SiTt client_mesh.ServiceReference1.FolderManager.EndFileList(System.IAsyncResult result) {
            return base.Channel.EndFileList(result);
        }
        
        private System.IAsyncResult OnBeginFileList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            string folder = ((string)(inValues[1]));
            return ((client_mesh.ServiceReference1.FolderManager)(this)).BeginFileList(userId, folder, callback, asyncState);
        }
        
        private object[] OnEndFileList(System.IAsyncResult result) {
            client_mesh.ServiceReference1.WebResultOfArrayOfFileDefinitiony8fP_SiTt retVal = ((client_mesh.ServiceReference1.FolderManager)(this)).EndFileList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFileListCompleted(object state) {
            if ((this.FileListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FileListCompleted(this, new FileListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FileListAsync(int userId, string folder) {
            this.FileListAsync(userId, folder, null);
        }
        
        public void FileListAsync(int userId, string folder, object userState) {
            if ((this.onBeginFileListDelegate == null)) {
                this.onBeginFileListDelegate = new BeginOperationDelegate(this.OnBeginFileList);
            }
            if ((this.onEndFileListDelegate == null)) {
                this.onEndFileListDelegate = new EndOperationDelegate(this.OnEndFileList);
            }
            if ((this.onFileListCompletedDelegate == null)) {
                this.onFileListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFileListCompleted);
            }
            base.InvokeAsync(this.onBeginFileListDelegate, new object[] {
                        userId,
                        folder}, this.onEndFileListDelegate, this.onFileListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference1.FolderManager.BeginGetFileFrom(int userId, string folder, string file, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFileFrom(userId, folder, file, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference1.WebResultOfFileDefinitiony8fP_SiTt client_mesh.ServiceReference1.FolderManager.EndGetFileFrom(System.IAsyncResult result) {
            return base.Channel.EndGetFileFrom(result);
        }
        
        private System.IAsyncResult OnBeginGetFileFrom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            string folder = ((string)(inValues[1]));
            string file = ((string)(inValues[2]));
            return ((client_mesh.ServiceReference1.FolderManager)(this)).BeginGetFileFrom(userId, folder, file, callback, asyncState);
        }
        
        private object[] OnEndGetFileFrom(System.IAsyncResult result) {
            client_mesh.ServiceReference1.WebResultOfFileDefinitiony8fP_SiTt retVal = ((client_mesh.ServiceReference1.FolderManager)(this)).EndGetFileFrom(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFileFromCompleted(object state) {
            if ((this.GetFileFromCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFileFromCompleted(this, new GetFileFromCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFileFromAsync(int userId, string folder, string file) {
            this.GetFileFromAsync(userId, folder, file, null);
        }
        
        public void GetFileFromAsync(int userId, string folder, string file, object userState) {
            if ((this.onBeginGetFileFromDelegate == null)) {
                this.onBeginGetFileFromDelegate = new BeginOperationDelegate(this.OnBeginGetFileFrom);
            }
            if ((this.onEndGetFileFromDelegate == null)) {
                this.onEndGetFileFromDelegate = new EndOperationDelegate(this.OnEndGetFileFrom);
            }
            if ((this.onGetFileFromCompletedDelegate == null)) {
                this.onGetFileFromCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFileFromCompleted);
            }
            base.InvokeAsync(this.onBeginGetFileFromDelegate, new object[] {
                        userId,
                        folder,
                        file}, this.onEndGetFileFromDelegate, this.onGetFileFromCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference1.FolderManager.BeginAddSharing(int ownerId, int friendId, string folder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddSharing(ownerId, friendId, folder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference1.WebResult client_mesh.ServiceReference1.FolderManager.EndAddSharing(System.IAsyncResult result) {
            return base.Channel.EndAddSharing(result);
        }
        
        private System.IAsyncResult OnBeginAddSharing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ownerId = ((int)(inValues[0]));
            int friendId = ((int)(inValues[1]));
            string folder = ((string)(inValues[2]));
            return ((client_mesh.ServiceReference1.FolderManager)(this)).BeginAddSharing(ownerId, friendId, folder, callback, asyncState);
        }
        
        private object[] OnEndAddSharing(System.IAsyncResult result) {
            client_mesh.ServiceReference1.WebResult retVal = ((client_mesh.ServiceReference1.FolderManager)(this)).EndAddSharing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddSharingCompleted(object state) {
            if ((this.AddSharingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddSharingCompleted(this, new AddSharingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddSharingAsync(int ownerId, int friendId, string folder) {
            this.AddSharingAsync(ownerId, friendId, folder, null);
        }
        
        public void AddSharingAsync(int ownerId, int friendId, string folder, object userState) {
            if ((this.onBeginAddSharingDelegate == null)) {
                this.onBeginAddSharingDelegate = new BeginOperationDelegate(this.OnBeginAddSharing);
            }
            if ((this.onEndAddSharingDelegate == null)) {
                this.onEndAddSharingDelegate = new EndOperationDelegate(this.OnEndAddSharing);
            }
            if ((this.onAddSharingCompletedDelegate == null)) {
                this.onAddSharingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddSharingCompleted);
            }
            base.InvokeAsync(this.onBeginAddSharingDelegate, new object[] {
                        ownerId,
                        friendId,
                        folder}, this.onEndAddSharingDelegate, this.onAddSharingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference1.FolderManager.BeginGetSharing(int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSharing(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference1.WebResultOfArrayOfSharingBZq_SeKvr client_mesh.ServiceReference1.FolderManager.EndGetSharing(System.IAsyncResult result) {
            return base.Channel.EndGetSharing(result);
        }
        
        private System.IAsyncResult OnBeginGetSharing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            return ((client_mesh.ServiceReference1.FolderManager)(this)).BeginGetSharing(userId, callback, asyncState);
        }
        
        private object[] OnEndGetSharing(System.IAsyncResult result) {
            client_mesh.ServiceReference1.WebResultOfArrayOfSharingBZq_SeKvr retVal = ((client_mesh.ServiceReference1.FolderManager)(this)).EndGetSharing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSharingCompleted(object state) {
            if ((this.GetSharingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSharingCompleted(this, new GetSharingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSharingAsync(int userId) {
            this.GetSharingAsync(userId, null);
        }
        
        public void GetSharingAsync(int userId, object userState) {
            if ((this.onBeginGetSharingDelegate == null)) {
                this.onBeginGetSharingDelegate = new BeginOperationDelegate(this.OnBeginGetSharing);
            }
            if ((this.onEndGetSharingDelegate == null)) {
                this.onEndGetSharingDelegate = new EndOperationDelegate(this.OnEndGetSharing);
            }
            if ((this.onGetSharingCompletedDelegate == null)) {
                this.onGetSharingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSharingCompleted);
            }
            base.InvokeAsync(this.onBeginGetSharingDelegate, new object[] {
                        userId}, this.onEndGetSharingDelegate, this.onGetSharingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference1.FolderManager.BeginGetReceiver(int userId, string folder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReceiver(userId, folder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference1.WebResultOfArrayOfSharingDefinitiony8fP_SiTt client_mesh.ServiceReference1.FolderManager.EndGetReceiver(System.IAsyncResult result) {
            return base.Channel.EndGetReceiver(result);
        }
        
        private System.IAsyncResult OnBeginGetReceiver(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            string folder = ((string)(inValues[1]));
            return ((client_mesh.ServiceReference1.FolderManager)(this)).BeginGetReceiver(userId, folder, callback, asyncState);
        }
        
        private object[] OnEndGetReceiver(System.IAsyncResult result) {
            client_mesh.ServiceReference1.WebResultOfArrayOfSharingDefinitiony8fP_SiTt retVal = ((client_mesh.ServiceReference1.FolderManager)(this)).EndGetReceiver(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReceiverCompleted(object state) {
            if ((this.GetReceiverCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReceiverCompleted(this, new GetReceiverCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReceiverAsync(int userId, string folder) {
            this.GetReceiverAsync(userId, folder, null);
        }
        
        public void GetReceiverAsync(int userId, string folder, object userState) {
            if ((this.onBeginGetReceiverDelegate == null)) {
                this.onBeginGetReceiverDelegate = new BeginOperationDelegate(this.OnBeginGetReceiver);
            }
            if ((this.onEndGetReceiverDelegate == null)) {
                this.onEndGetReceiverDelegate = new EndOperationDelegate(this.OnEndGetReceiver);
            }
            if ((this.onGetReceiverCompletedDelegate == null)) {
                this.onGetReceiverCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReceiverCompleted);
            }
            base.InvokeAsync(this.onBeginGetReceiverDelegate, new object[] {
                        userId,
                        folder}, this.onEndGetReceiverDelegate, this.onGetReceiverCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference1.FolderManager.BeginDeleteSharing(int sharingId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSharing(sharingId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference1.WebResult client_mesh.ServiceReference1.FolderManager.EndDeleteSharing(System.IAsyncResult result) {
            return base.Channel.EndDeleteSharing(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSharing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int sharingId = ((int)(inValues[0]));
            return ((client_mesh.ServiceReference1.FolderManager)(this)).BeginDeleteSharing(sharingId, callback, asyncState);
        }
        
        private object[] OnEndDeleteSharing(System.IAsyncResult result) {
            client_mesh.ServiceReference1.WebResult retVal = ((client_mesh.ServiceReference1.FolderManager)(this)).EndDeleteSharing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteSharingCompleted(object state) {
            if ((this.DeleteSharingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSharingCompleted(this, new DeleteSharingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSharingAsync(int sharingId) {
            this.DeleteSharingAsync(sharingId, null);
        }
        
        public void DeleteSharingAsync(int sharingId, object userState) {
            if ((this.onBeginDeleteSharingDelegate == null)) {
                this.onBeginDeleteSharingDelegate = new BeginOperationDelegate(this.OnBeginDeleteSharing);
            }
            if ((this.onEndDeleteSharingDelegate == null)) {
                this.onEndDeleteSharingDelegate = new EndOperationDelegate(this.OnEndDeleteSharing);
            }
            if ((this.onDeleteSharingCompletedDelegate == null)) {
                this.onDeleteSharingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSharingCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSharingDelegate, new object[] {
                        sharingId}, this.onEndDeleteSharingDelegate, this.onDeleteSharingCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override client_mesh.ServiceReference1.FolderManager CreateChannel() {
            return new FolderManagerClientChannel(this);
        }
        
        private class FolderManagerClientChannel : ChannelBase<client_mesh.ServiceReference1.FolderManager>, client_mesh.ServiceReference1.FolderManager {
            
            public FolderManagerClientChannel(System.ServiceModel.ClientBase<client_mesh.ServiceReference1.FolderManager> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCreate(int userId, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = name;
                System.IAsyncResult _result = base.BeginInvoke("Create", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference1.WebResult EndCreate(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference1.WebResult _result = ((client_mesh.ServiceReference1.WebResult)(base.EndInvoke("Create", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelete(int userId, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = name;
                System.IAsyncResult _result = base.BeginInvoke("Delete", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference1.WebResult EndDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference1.WebResult _result = ((client_mesh.ServiceReference1.WebResult)(base.EndInvoke("Delete", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRename(int userId, string name, string newName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userId;
                _args[1] = name;
                _args[2] = newName;
                System.IAsyncResult _result = base.BeginInvoke("Rename", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference1.WebResult EndRename(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference1.WebResult _result = ((client_mesh.ServiceReference1.WebResult)(base.EndInvoke("Rename", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDirList(int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("DirList", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference1.WebResultOfArrayOfstringuHEDJ7Dj EndDirList(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference1.WebResultOfArrayOfstringuHEDJ7Dj _result = ((client_mesh.ServiceReference1.WebResultOfArrayOfstringuHEDJ7Dj)(base.EndInvoke("DirList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFileList(int userId, string folder, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = folder;
                System.IAsyncResult _result = base.BeginInvoke("FileList", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference1.WebResultOfArrayOfFileDefinitiony8fP_SiTt EndFileList(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference1.WebResultOfArrayOfFileDefinitiony8fP_SiTt _result = ((client_mesh.ServiceReference1.WebResultOfArrayOfFileDefinitiony8fP_SiTt)(base.EndInvoke("FileList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFileFrom(int userId, string folder, string file, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userId;
                _args[1] = folder;
                _args[2] = file;
                System.IAsyncResult _result = base.BeginInvoke("GetFileFrom", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference1.WebResultOfFileDefinitiony8fP_SiTt EndGetFileFrom(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference1.WebResultOfFileDefinitiony8fP_SiTt _result = ((client_mesh.ServiceReference1.WebResultOfFileDefinitiony8fP_SiTt)(base.EndInvoke("GetFileFrom", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddSharing(int ownerId, int friendId, string folder, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ownerId;
                _args[1] = friendId;
                _args[2] = folder;
                System.IAsyncResult _result = base.BeginInvoke("AddSharing", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference1.WebResult EndAddSharing(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference1.WebResult _result = ((client_mesh.ServiceReference1.WebResult)(base.EndInvoke("AddSharing", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSharing(int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetSharing", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference1.WebResultOfArrayOfSharingBZq_SeKvr EndGetSharing(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference1.WebResultOfArrayOfSharingBZq_SeKvr _result = ((client_mesh.ServiceReference1.WebResultOfArrayOfSharingBZq_SeKvr)(base.EndInvoke("GetSharing", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetReceiver(int userId, string folder, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = folder;
                System.IAsyncResult _result = base.BeginInvoke("GetReceiver", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference1.WebResultOfArrayOfSharingDefinitiony8fP_SiTt EndGetReceiver(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference1.WebResultOfArrayOfSharingDefinitiony8fP_SiTt _result = ((client_mesh.ServiceReference1.WebResultOfArrayOfSharingDefinitiony8fP_SiTt)(base.EndInvoke("GetReceiver", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteSharing(int sharingId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sharingId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteSharing", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference1.WebResult EndDeleteSharing(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference1.WebResult _result = ((client_mesh.ServiceReference1.WebResult)(base.EndInvoke("DeleteSharing", _args, result)));
                return _result;
            }
        }
    }
}
