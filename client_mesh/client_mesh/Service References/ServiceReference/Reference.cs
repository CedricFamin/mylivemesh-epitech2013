//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace client_mesh.ServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResult", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(client_mesh.ServiceReference.WebResultOfUserBZq_SeKvr))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(client_mesh.ServiceReference.WebResultOfArrayOfUserBZq_SeKvr))]
    public partial class WebResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private client_mesh.ServiceReference.WebResult.ErrorCodeList ErrorCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public client_mesh.ServiceReference.WebResult.ErrorCodeList ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="WebResult.ErrorCodeList", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
        public enum ErrorCodeList : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SUCCESS = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            USER_NOT_FOUND = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            INFORMATION_REQUIRED = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            USER_ALREADY_EXIST = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CANNOT_CREATE_DIRECTORY = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DIRECTORY_NOT_FOUND = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CANNOT_DELETE_DIRECTORY = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CANNOT_RENAME_DIRECTORY = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FILE_NOT_FOUND = 8,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResultOfUserBZq_SeKvr", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
    public partial class WebResultOfUserBZq_SeKvr : client_mesh.ServiceReference.WebResult {
        
        private client_mesh.ServiceReference.User ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public client_mesh.ServiceReference.User Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebResultOfArrayOfUserBZq_SeKvr", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.Utils")]
    public partial class WebResultOfArrayOfUserBZq_SeKvr : client_mesh.ServiceReference.WebResult {
        
        private System.Collections.ObjectModel.ObservableCollection<client_mesh.ServiceReference.User> ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<client_mesh.ServiceReference.User> Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/MyLiveMesh.LinqToSQL")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string emailField;
        
        private int idField;
        
        private System.Nullable<int> limit_filesField;
        
        private System.Nullable<int> limit_folderField;
        
        private System.Nullable<int> limit_szeField;
        
        private string passwordField;
        
        private string root_pathField;
        
        private bool superuserField;
        
        private string usernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> limit_files {
            get {
                return this.limit_filesField;
            }
            set {
                if ((this.limit_filesField.Equals(value) != true)) {
                    this.limit_filesField = value;
                    this.RaisePropertyChanged("limit_files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> limit_folder {
            get {
                return this.limit_folderField;
            }
            set {
                if ((this.limit_folderField.Equals(value) != true)) {
                    this.limit_folderField = value;
                    this.RaisePropertyChanged("limit_folder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> limit_sze {
            get {
                return this.limit_szeField;
            }
            set {
                if ((this.limit_szeField.Equals(value) != true)) {
                    this.limit_szeField = value;
                    this.RaisePropertyChanged("limit_sze");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string root_path {
            get {
                return this.root_pathField;
            }
            set {
                if ((object.ReferenceEquals(this.root_pathField, value) != true)) {
                    this.root_pathField = value;
                    this.RaisePropertyChanged("root_path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool superuser {
            get {
                return this.superuserField;
            }
            set {
                if ((this.superuserField.Equals(value) != true)) {
                    this.superuserField = value;
                    this.RaisePropertyChanged("superuser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="ServiceReference.Account")]
    public interface Account {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Account/Register", ReplyAction="urn:Account/RegisterResponse")]
        System.IAsyncResult BeginRegister(string username, string email, string password, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference.WebResult EndRegister(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Account/Login", ReplyAction="urn:Account/LoginResponse")]
        System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference.WebResultOfUserBZq_SeKvr EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Account/Update", ReplyAction="urn:Account/UpdateResponse")]
        System.IAsyncResult BeginUpdate(client_mesh.ServiceReference.User updateUser, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference.WebResult EndUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Account/Delete", ReplyAction="urn:Account/DeleteResponse")]
        System.IAsyncResult BeginDelete(int id, System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference.WebResult EndDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Account/UserList", ReplyAction="urn:Account/UserListResponse")]
        System.IAsyncResult BeginUserList(System.AsyncCallback callback, object asyncState);
        
        client_mesh.ServiceReference.WebResultOfArrayOfUserBZq_SeKvr EndUserList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AccountChannel : client_mesh.ServiceReference.Account, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference.WebResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference.WebResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference.WebResultOfUserBZq_SeKvr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference.WebResultOfUserBZq_SeKvr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference.WebResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference.WebResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference.WebResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference.WebResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public client_mesh.ServiceReference.WebResultOfArrayOfUserBZq_SeKvr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((client_mesh.ServiceReference.WebResultOfArrayOfUserBZq_SeKvr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountClient : System.ServiceModel.ClientBase<client_mesh.ServiceReference.Account>, client_mesh.ServiceReference.Account {
        
        private BeginOperationDelegate onBeginRegisterDelegate;
        
        private EndOperationDelegate onEndRegisterDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDelegate;
        
        private EndOperationDelegate onEndUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDelegate;
        
        private EndOperationDelegate onEndDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserListDelegate;
        
        private EndOperationDelegate onEndUserListDelegate;
        
        private System.Threading.SendOrPostCallback onUserListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AccountClient() {
        }
        
        public AccountClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<RegisterCompletedEventArgs> RegisterCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<UpdateCompletedEventArgs> UpdateCompleted;
        
        public event System.EventHandler<DeleteCompletedEventArgs> DeleteCompleted;
        
        public event System.EventHandler<UserListCompletedEventArgs> UserListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference.Account.BeginRegister(string username, string email, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegister(username, email, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference.WebResult client_mesh.ServiceReference.Account.EndRegister(System.IAsyncResult result) {
            return base.Channel.EndRegister(result);
        }
        
        private System.IAsyncResult OnBeginRegister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string email = ((string)(inValues[1]));
            string password = ((string)(inValues[2]));
            return ((client_mesh.ServiceReference.Account)(this)).BeginRegister(username, email, password, callback, asyncState);
        }
        
        private object[] OnEndRegister(System.IAsyncResult result) {
            client_mesh.ServiceReference.WebResult retVal = ((client_mesh.ServiceReference.Account)(this)).EndRegister(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterCompleted(object state) {
            if ((this.RegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterAsync(string username, string email, string password) {
            this.RegisterAsync(username, email, password, null);
        }
        
        public void RegisterAsync(string username, string email, string password, object userState) {
            if ((this.onBeginRegisterDelegate == null)) {
                this.onBeginRegisterDelegate = new BeginOperationDelegate(this.OnBeginRegister);
            }
            if ((this.onEndRegisterDelegate == null)) {
                this.onEndRegisterDelegate = new EndOperationDelegate(this.OnEndRegister);
            }
            if ((this.onRegisterCompletedDelegate == null)) {
                this.onRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterDelegate, new object[] {
                        username,
                        email,
                        password}, this.onEndRegisterDelegate, this.onRegisterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference.Account.BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(username, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference.WebResultOfUserBZq_SeKvr client_mesh.ServiceReference.Account.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((client_mesh.ServiceReference.Account)(this)).BeginLogin(username, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            client_mesh.ServiceReference.WebResultOfUserBZq_SeKvr retVal = ((client_mesh.ServiceReference.Account)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        public void LoginAsync(string username, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        username,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference.Account.BeginUpdate(client_mesh.ServiceReference.User updateUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdate(updateUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference.WebResult client_mesh.ServiceReference.Account.EndUpdate(System.IAsyncResult result) {
            return base.Channel.EndUpdate(result);
        }
        
        private System.IAsyncResult OnBeginUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            client_mesh.ServiceReference.User updateUser = ((client_mesh.ServiceReference.User)(inValues[0]));
            return ((client_mesh.ServiceReference.Account)(this)).BeginUpdate(updateUser, callback, asyncState);
        }
        
        private object[] OnEndUpdate(System.IAsyncResult result) {
            client_mesh.ServiceReference.WebResult retVal = ((client_mesh.ServiceReference.Account)(this)).EndUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateCompleted(object state) {
            if ((this.UpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAsync(client_mesh.ServiceReference.User updateUser) {
            this.UpdateAsync(updateUser, null);
        }
        
        public void UpdateAsync(client_mesh.ServiceReference.User updateUser, object userState) {
            if ((this.onBeginUpdateDelegate == null)) {
                this.onBeginUpdateDelegate = new BeginOperationDelegate(this.OnBeginUpdate);
            }
            if ((this.onEndUpdateDelegate == null)) {
                this.onEndUpdateDelegate = new EndOperationDelegate(this.OnEndUpdate);
            }
            if ((this.onUpdateCompletedDelegate == null)) {
                this.onUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDelegate, new object[] {
                        updateUser}, this.onEndUpdateDelegate, this.onUpdateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference.Account.BeginDelete(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference.WebResult client_mesh.ServiceReference.Account.EndDelete(System.IAsyncResult result) {
            return base.Channel.EndDelete(result);
        }
        
        private System.IAsyncResult OnBeginDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((client_mesh.ServiceReference.Account)(this)).BeginDelete(id, callback, asyncState);
        }
        
        private object[] OnEndDelete(System.IAsyncResult result) {
            client_mesh.ServiceReference.WebResult retVal = ((client_mesh.ServiceReference.Account)(this)).EndDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteCompleted(object state) {
            if ((this.DeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAsync(int id) {
            this.DeleteAsync(id, null);
        }
        
        public void DeleteAsync(int id, object userState) {
            if ((this.onBeginDeleteDelegate == null)) {
                this.onBeginDeleteDelegate = new BeginOperationDelegate(this.OnBeginDelete);
            }
            if ((this.onEndDeleteDelegate == null)) {
                this.onEndDeleteDelegate = new EndOperationDelegate(this.OnEndDelete);
            }
            if ((this.onDeleteCompletedDelegate == null)) {
                this.onDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDelegate, new object[] {
                        id}, this.onEndDeleteDelegate, this.onDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult client_mesh.ServiceReference.Account.BeginUserList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        client_mesh.ServiceReference.WebResultOfArrayOfUserBZq_SeKvr client_mesh.ServiceReference.Account.EndUserList(System.IAsyncResult result) {
            return base.Channel.EndUserList(result);
        }
        
        private System.IAsyncResult OnBeginUserList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((client_mesh.ServiceReference.Account)(this)).BeginUserList(callback, asyncState);
        }
        
        private object[] OnEndUserList(System.IAsyncResult result) {
            client_mesh.ServiceReference.WebResultOfArrayOfUserBZq_SeKvr retVal = ((client_mesh.ServiceReference.Account)(this)).EndUserList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserListCompleted(object state) {
            if ((this.UserListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserListCompleted(this, new UserListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserListAsync() {
            this.UserListAsync(null);
        }
        
        public void UserListAsync(object userState) {
            if ((this.onBeginUserListDelegate == null)) {
                this.onBeginUserListDelegate = new BeginOperationDelegate(this.OnBeginUserList);
            }
            if ((this.onEndUserListDelegate == null)) {
                this.onEndUserListDelegate = new EndOperationDelegate(this.OnEndUserList);
            }
            if ((this.onUserListCompletedDelegate == null)) {
                this.onUserListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserListCompleted);
            }
            base.InvokeAsync(this.onBeginUserListDelegate, null, this.onEndUserListDelegate, this.onUserListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override client_mesh.ServiceReference.Account CreateChannel() {
            return new AccountClientChannel(this);
        }
        
        private class AccountClientChannel : ChannelBase<client_mesh.ServiceReference.Account>, client_mesh.ServiceReference.Account {
            
            public AccountClientChannel(System.ServiceModel.ClientBase<client_mesh.ServiceReference.Account> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginRegister(string username, string email, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = username;
                _args[1] = email;
                _args[2] = password;
                System.IAsyncResult _result = base.BeginInvoke("Register", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference.WebResult EndRegister(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference.WebResult _result = ((client_mesh.ServiceReference.WebResult)(base.EndInvoke("Register", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = username;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference.WebResultOfUserBZq_SeKvr EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference.WebResultOfUserBZq_SeKvr _result = ((client_mesh.ServiceReference.WebResultOfUserBZq_SeKvr)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdate(client_mesh.ServiceReference.User updateUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = updateUser;
                System.IAsyncResult _result = base.BeginInvoke("Update", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference.WebResult EndUpdate(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference.WebResult _result = ((client_mesh.ServiceReference.WebResult)(base.EndInvoke("Update", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDelete(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("Delete", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference.WebResult EndDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference.WebResult _result = ((client_mesh.ServiceReference.WebResult)(base.EndInvoke("Delete", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUserList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("UserList", _args, callback, asyncState);
                return _result;
            }
            
            public client_mesh.ServiceReference.WebResultOfArrayOfUserBZq_SeKvr EndUserList(System.IAsyncResult result) {
                object[] _args = new object[0];
                client_mesh.ServiceReference.WebResultOfArrayOfUserBZq_SeKvr _result = ((client_mesh.ServiceReference.WebResultOfArrayOfUserBZq_SeKvr)(base.EndInvoke("UserList", _args, result)));
                return _result;
            }
        }
    }
}
